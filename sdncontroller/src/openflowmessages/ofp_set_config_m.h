//
// Generated file, do not edit! Created by nedtool 5.4 from openflowmessages/ofp_set_config.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INET_OFP_SET_CONFIG_M_H
#define __INET_OFP_SET_CONFIG_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class Ofp_set_config;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/Units_m.h" // import inet.common.Units

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Enum generated from <tt>openflowmessages/ofp_set_config.msg:21</tt> by nedtool.
 * <pre>
 * enum Flag_conf
 * {
 *     OFPC_FRAG_NORMAL = 0x0000;//NORMAL
 *     OFPC_FRAG_DROP = 0x0001;//DROP
 *     OFPC_FRAG_REASM = 0x0002;//REASEMBLE
 *     OFPC_FRAG_MASK = 0x0003;//FRAG MASK
 * }
 * </pre>
 */
enum Flag_conf {
    OFPC_FRAG_NORMAL = 0x0000,
    OFPC_FRAG_DROP = 0x0001,
    OFPC_FRAG_REASM = 0x0002,
    OFPC_FRAG_MASK = 0x0003
};

/**
 * Class generated from <tt>openflowmessages/ofp_set_config.msg:28</tt> by nedtool.
 * <pre>
 * class Ofp_set_config extends FieldsChunk
 * {
 *     uint16_t flag;
 *     uint16_t len;
 *     chunkLength = B(4);
 * 
 * }
 * </pre>
 */
class Ofp_set_config : public ::inet::FieldsChunk
{
  protected:
    uint16_t flag = 0;
    uint16_t len = 0;

  private:
    void copy(const Ofp_set_config& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ofp_set_config&);

  public:
    Ofp_set_config();
    Ofp_set_config(const Ofp_set_config& other);
    virtual ~Ofp_set_config();
    Ofp_set_config& operator=(const Ofp_set_config& other);
    virtual Ofp_set_config *dup() const override {return new Ofp_set_config(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint16_t getFlag() const;
    virtual void setFlag(uint16_t flag);
    virtual uint16_t getLen() const;
    virtual void setLen(uint16_t len);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Ofp_set_config& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Ofp_set_config& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_OFP_SET_CONFIG_M_H

